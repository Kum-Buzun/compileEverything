#!/bin/bash

source "${H}/sbin/usrcmd/get_tpl_value"


get_tpl_value "${H}/.envs.private" "@DOWNSTREAM_URL_HGIT@" downstream_url

if [[ "${downstream_url}" == "" ]] ; then 
  #echo "no downstream_url."
  exit 0
fi

#echo "Check if anything new comes from upstream '${downstream_url}', before pushing it back to downstream"
repos=$(git --git-dir=${H}/repositories/gitolite-admin.git show master:conf/gitolite.conf | grep "repo " | grep -v "testing" | grep -v "gitolite-admin")
while read arepo; do
  arepo=${arepo#* }
  if [[ "${arepo#@}" == "${arepo}" ]] ; then
    echo "arepo='${arepo}'"
    ggit="git --git-dir=${H}/repositories/${arepo}.git"
    # echo "${ggit} fetch external"
    exturl=$(${ggit} config --local --get remote.external.url)
    # echo "'${exturl}'"
    exturl="https://${exturl#*@}"
     echo "exturl for repo '${arepo}': external='${exturl}'"
    if [[ "${exturl}" != "" ]] ; then
      chelper=$(${ggit} config --local --get credential.helper)
      if [[ "${chelper#netrc }" == "${chelper}" ]] ; then
        $(${ggit} config --local credential.helper 'netrc -f ${H}/mcron/projextrdr.netrc.gpg -v -d')
      fi
      aref=$(cat "${H}/repositories/${arepo}.git/refs/heads/master_ext")
      ${ggit} fetch ${exturl} master:master_ext
      aref2=$(cat "${H}/repositories/${arepo}.git/refs/heads/master_ext")
      fh=$(cat "${H}/repositories/${arepo}.git/FETCH_HEAD")
      echo "FETCH_HEAD='${fh}', refs/heads/master_ext='${aref}' => '${aref2}"
      if [[ "${aref}" != "${aref2}" && "${fh#${aref2}}" != "${fh}" ]] ; then
        ${ggit} push --force ${downstream_url}${arepo}.git master_ext:master_ext
      fi
    fi
  fi
done < <(echo "${repos}")

