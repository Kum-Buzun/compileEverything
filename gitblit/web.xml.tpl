<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
	xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	
	<!-- Base folder for repositories -->
	<!-- Use forward slashes even on Windows!! -->
	<!-- e.g. c:/gitrepos -->
	<!-- SINCE 0.5.0 -->
	<!-- RESTART REQUIRED -->
	<context-param>
		<param-name>git.repositoriesFolder</param-name>
		<param-value>git</param-value>
	</context-param>

	<!-- Search the repositories folder subfolders for other repositories. -->
	<!-- Repositories MAY NOT be nested (i.e. one repository within another) -->
	<!-- but they may be grouped together in subfolders. -->
	<!-- e.g. c:/gitrepos/libraries/mylibrary.git -->
	<!-- c:/gitrepos/libraries/myotherlibrary.git -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>git.searchRepositoriesSubfolders</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Allow push/pull over http/https with JGit servlet. -->
	<!-- If you do NOT want to allow Git clients to clone/push to Gitblit set this -->
	<!-- to false.  You might want to do this if you are only using ssh:// or git://. -->
	<!-- If you set this false, consider changing the *web.otherUrls* setting to -->
	<!-- indicate your clone/push urls. -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>git.enableGitServlet</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Location of Groovy scripts to use for Pre and Post receive hooks. -->
	<!-- Use forward slashes even on Windows!! -->
	<!-- e.g. c:/groovy -->
	<!-- RESTART REQUIRED -->
	<!-- SINCE 0.8.0 -->
	<context-param>
		<param-name>groovy.scriptsFolder</param-name>
		<param-value>groovy</param-value>
	</context-param>

	<!-- Scripts to execute on Pre-Receive. -->
	<!-- These scripts execute after an incoming push has been parsed and validated -->
	<!-- but BEFORE the changes are applied to the repository.  You might reject a -->
	<!-- push in this script based on the repository and branch the push is attempting -->
	<!-- to change. -->
	<!-- Script names are case-sensitive on case-sensitive file systems.  You may omit -->
	<!-- the traditional ".groovy" from this list if your file extension is ".groovy" -->
	<!-- NOTE: -->
	<!-- These scripts are only executed when pushing to *Gitblit*, not to other Git -->
	<!-- tooling you may be using.  Also note that these scripts are shared between -->
	<!-- repositories. These are NOT repository-specific scripts!  Within the script -->
	<!-- you may customize the control-flow for a specific repository by checking the -->
	<!-- *repository* variable. -->
	<!-- SPACE-DELIMITED -->
	<!-- CASE-SENSITIVE -->
	<!-- SINCE 0.8.0 -->
	<context-param>
		<param-name>groovy.preReceiveScripts</param-name>
		<param-value></param-value>
	</context-param>

	<!-- Scripts to execute on Post-Receive. -->
	<!-- These scripts execute AFTER an incoming push has been applied to a repository. -->
	<!-- You might trigger a continuous-integration build here or send a notification. -->
	<!-- Script names are case-sensitive on case-sensitive file systems.  You may omit -->
	<!-- the traditional ".groovy" from this list if your file extension is ".groovy" -->
	<!-- NOTE: -->
	<!-- These scripts are only executed when pushing to *Gitblit*, not to other Git -->
	<!-- tooling you may be using.  Also note that these scripts are shared between -->
	<!-- repositories. These are NOT repository-specific scripts!  Within the script -->
	<!-- you may customize the control-flow for a specific repository by checking the -->
	<!-- *repository* variable. -->
	<!--  -->
	<!-- SPACE-DELIMITED -->
	<!-- CASE-SENSITIVE -->
	<!-- SINCE 0.8.0 -->
	<context-param>
		<param-name>groovy.postReceiveScripts</param-name>
		<param-value></param-value>
	</context-param>

	<!-- Require authentication to see everything but the admin pages -->
	<!-- SINCE 0.5.0 -->
	<!-- RESTART REQUIRED -->
	<context-param>
		<param-name>web.authenticateViewPages</param-name>
		<param-value>false</param-value>
	</context-param>

	<!-- Require admin authentication for the admin functions and pages -->
	<!-- SINCE 0.5.0 -->
	<!-- RESTART REQUIRED -->
	<context-param>
		<param-name>web.authenticateAdminPages</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Allow Gitblit to store a cookie in the user's browser for automatic -->
	<!-- authentication.  The cookie is generated by the user service. -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.allowCookieAuthentication</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Either the full path to a user config file (users.conf) -->
	<!-- OR the full path to a simple user properties file (users.properties) -->
	<!-- OR a fully qualified class name that implements the IUserService interface. -->
	<!-- Any custom implementation must have a public default constructor. -->
	<!-- SINCE 0.5.0 -->
	<!-- RESTART REQUIRED -->
	<context-param>
		<param-name>realm.userService</param-name>
		<param-value>users.conf</param-value>
	</context-param>

	<!-- How to store passwords. -->
	<!-- Valid values are plain, md5, or combined-md5.  md5 is the hash of password. -->
	<!-- combined-md5 is the hash of username.toLowerCase()+password. -->
	<!-- Default is md5. -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>realm.passwordStorage</param-name>
		<param-value>md5</param-value>
	</context-param>

	<!-- Minimum valid length for a plain text password. -->
	<!-- Default value is 5.  Absolute minimum is 4. -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>realm.minPasswordLength</param-name>
		<param-value>5</param-value>
	</context-param>

	<!-- Gitblit Web Settings -->
	<!-- If blank Gitblit is displayed. -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.siteName</param-name>
		<param-value></param-value>
	</context-param>

	<!-- If *web.authenticateAdminPages*=true, users with "admin" role can create -->
	<!-- repositories, create users, and edit repository metadata. -->
	<!-- If *web.authenticateAdminPages*=false, any user can execute the aforementioned -->
	<!-- functions. -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.allowAdministration</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Allows rpc clients to list repositories and possibly manage or administer the -->
	<!-- Gitblit server, if the authenticated account has administrator permissions. -->
	<!-- See *web.enableRpcManagement* and *web.enableRpcAdministration*. -->
	<!-- SINCE 0.7.0 -->
	<context-param>
		<param-name>web.enableRpcServlet</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Allows rpc clients to manage repositories and users of the Gitblit instance, -->
	<!-- if the authenticated account has administrator permissions. -->
	<!-- Requires *web.enableRpcServlet=true*. -->
	<!-- SINCE 0.7.0 -->
	<context-param>
		<param-name>web.enableRpcManagement</param-name>
		<param-value>false</param-value>
	</context-param>

	<!-- Allows rpc clients to control the server settings and monitor the health of this -->
	<!-- this Gitblit instance, if the authenticated account has administrator permissions. -->
	<!-- Requires *web.enableRpcServlet=true* and *web.enableRpcManagement*. -->
	<!-- SINCE 0.7.0 -->
	<context-param>
		<param-name>web.enableRpcAdministration</param-name>
		<param-value>false</param-value>
	</context-param>

	<!-- Allow Gravatar images to be displayed in Gitblit pages. -->
	<!-- SINCE 0.8.0 -->
	<context-param>
		<param-name>web.allowGravatar</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Allow dynamic zip downloads. -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.allowZipDownloads</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Use Clippy (Flash solution) to provide a copy-to-clipboard button. -->
	<!-- If false, a button with a more primitive JavaScript-based prompt box will -->
	<!-- offer a 3-step (click, ctrl+c, enter) copy-to-clipboard alternative. -->
	<!-- SINCE 0.8.0 -->
	<context-param>
		<param-name>web.allowFlashCopyToClipboard</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Default number of entries to include in RSS Syndication links -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.syndicationEntries</param-name>
		<param-value>25</param-value>
	</context-param>

	<!-- Show the size of each repository on the repositories page. -->
	<!-- This requires recursive traversal of each repository folder.  This may be -->
	<!-- non-performant on some operating systems and/or filesystems. -->
	<!-- SINCE 0.5.2 -->
	<context-param>
		<param-name>web.showRepositorySizes</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- List of custom regex expressions that can be displayed in the Filters menu -->
	<!-- of the Repositories and Activity pages.  Keep them very simple because you -->
	<!-- are likely to run into encoding issues if they are too complex. -->
	<!-- Use !!! to separate the filters -->
	<!-- SINCE 0.8.0 -->
	<context-param>
		<param-name>web.customFilters</param-name>
		<param-value></param-value>
	</context-param>

	<!-- Show federation registrations (without token) and the current pull status -->
	<!-- to non-administrator users. -->
	<!-- SINCE 0.6.0 -->
	<context-param>
		<param-name>web.showFederationRegistrations</param-name>
		<param-value>false</param-value>
	</context-param>

	<!-- This is the message displayed when *web.authenticateViewPages=true*. -->
	<!-- This can point to a file with Markdown content. -->
	<!-- Specifying "gitblit" uses the internal login message. -->
	<!-- SINCE 0.7.0 -->
	<context-param>
		<param-name>web.loginMessage</param-name>
		<param-value>gitblit</param-value>
	</context-param>

	<!-- This is the message displayed above the repositories table. -->
	<!-- This can point to a file with Markdown content. -->
	<!-- Specifying "gitblit" uses the internal welcome message. -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.repositoriesMessage</param-name>
		<param-value>gitblit</param-value>
	</context-param>

	<!-- Use the client timezone when formatting dates. -->
	<!-- This uses AJAX to determine the browser's timezone and may require more -->
	<!-- server overhead because a Wicket session is created.  All Gitblit pages -->
	<!-- attempt to be stateless, if possible. -->
	<!-- SINCE 0.5.0 -->
	<!-- RESTART REQUIRED -->
	<context-param>
		<param-name>web.useClientTimezone</param-name>
		<param-value>false</param-value>
	</context-param>

	<!-- Time format -->
	<!-- <http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html> -->
	<!-- SINCE 0.8.0 -->
	<context-param>
		<param-name>web.timeFormat</param-name>
		<param-value>HH:mm</param-value>
	</context-param>

	<!-- Short date format -->
	<!-- <http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html> -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.datestampShortFormat</param-name>
		<param-value>yyyy-MM-dd</param-value>
	</context-param>

	<!-- Long date format -->
	<!-- SINCE 0.8.0 -->
	<context-param>
		<param-name>web.datestampLongFormat</param-name>
		<param-value>EEEE, MMMM d, yyyy</param-value>
	</context-param>

	<!-- Long timestamp format -->
	<!-- <http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html> -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.datetimestampLongFormat</param-name>
		<param-value>EEEE, MMMM d, yyyy h:mm a z</param-value>
	</context-param>

	<!-- Mount URL parameters -->
	<!-- This setting controls if pretty or parameter URLs are used. -->
	<!-- i.e. -->
	<!-- if true: -->
	<!-- http://localhost/commit/myrepo/abcdef -->
	<!-- if false: -->
	<!-- http://localhost/commit/?r=myrepo&h=abcdef -->
	<!-- SINCE 0.5.0 -->
	<!-- RESTART REQUIRED -->
	<context-param>
		<param-name>web.mountParameters</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Some servlet containers (e.g. Tomcat >= 6.0.10) disallow '/' (%2F) encoding -->
	<!-- in URLs as a security precaution for proxies.  This setting tells Gitblit -->
	<!-- to preemptively replace '/' with '*' or '!' for url string parameters. -->
	<!-- <https://issues.apache.org/jira/browse/WICKET-1303> -->
	<!-- <http://tomcat.apache.org/security-6.html#Fixed_in_Apache_Tomcat_6.0.10> -->
	<!-- Add *org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true* to *CATALINA_OPTS* -->
	<!-- SINCE 0.5.2 -->
	<context-param>
		<param-name>web.forwardSlashCharacter</param-name>
		<param-value>/</param-value>
	</context-param>

	<!-- Show other URLs on the summary page for accessing your git repositories -->
	<!-- Use spaces to separate urls. {0} is the token for the repository name. -->
	<!-- e.g. -->
	<!-- web.otherUrls = ssh://localhost/git/{0} git://localhost/git/{0} -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.otherUrls</param-name>
		<param-value></param-value>
	</context-param>

	<!-- Choose how to present the repositories list. -->
	<!-- grouped = group nested/subfolder repositories together (no sorting) -->
	<!-- flat = flat list of repositories (sorting allowed) -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.repositoryListType</param-name>
		<param-value>grouped</param-value>
	</context-param>

	<!-- If using a grouped repository list and there are repositories at the -->
	<!-- root level of your repositories folder, you may specify the displayed -->
	<!-- group name with this setting.  This value is only used for web presentation. -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.repositoryRootGroupName</param-name>
		<param-value>main</param-value>
	</context-param>

	<!-- Display the repository swatch color next to the repository name link in the -->
	<!-- repositories list. -->
	<!-- SINCE 0.8.0 -->
	<context-param>
		<param-name>web.repositoryListSwatches</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Choose the diff presentation style: gitblt, gitweb, or plain -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.diffStyle</param-name>
		<param-value>gitblit</param-value>
	</context-param>

	<!-- Control if email addresses are shown in web ui -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.showEmailAddresses</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Shows a combobox in the page links header with commit, committer, and author -->
	<!-- search selection.  Default search is commit. -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.showSearchTypeSelection</param-name>
		<param-value>false</param-value>
	</context-param>

	<!-- Generates a line graph of repository activity over time on the Summary page. -->
	<!-- This uses the Google Charts API. -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.generateActivityGraph</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- The number of days to show on the activity page. -->
	<!-- Value must exceed 0 else default of 14 is used -->
	<!-- SINCE 0.8.0 -->
	<context-param>
		<param-name>web.activityDuration</param-name>
		<param-value>14</param-value>
	</context-param>

	<!-- The number of commits to display on the summary page -->
	<!-- Value must exceed 0 else default of 20 is used -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.summaryCommitCount</param-name>
		<param-value>16</param-value>
	</context-param>

	<!-- The number of tags/branches to display on the summary page. -->
	<!-- -1 = all tags/branches -->
	<!-- 0 = hide tags/branches -->
	<!-- N = N tags/branches -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.summaryRefsCount</param-name>
		<param-value>5</param-value>
	</context-param>

	<!-- The number of items to show on a page before showing the first, prev, next -->
	<!-- pagination links.  A default if 50 is used for any invalid value. -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.itemsPerPage</param-name>
		<param-value>50</param-value>
	</context-param>

	<!-- Registered extensions for google-code-prettify -->
	<!-- SPACE-DELIMITED -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.prettyPrintExtensions</param-name>
		<param-value>c cpp cs css htm html java js php pl prefs properties py rb sh sql xml vb</param-value>
	</context-param>

	<!-- Registered extensions for markdown transformation -->
	<!-- SPACE-DELIMITED -->
	<!-- CASE-SENSITIVE -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.markdownExtensions</param-name>
		<param-value>md mkd markdown MD MKD</param-value>
	</context-param>

	<!-- Image extensions -->
	<!-- SPACE-DELIMITED -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.imageExtensions</param-name>
		<param-value>bmp jpg gif png</param-value>
	</context-param>

	<!-- Registered extensions for binary blobs -->
	<!-- SPACE-DELIMITED -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.binaryExtensions</param-name>
		<param-value>jar pdf tar.gz zip</param-value>
	</context-param>

	<!-- Aggressive heap management will run the garbage collector on every generated -->
	<!-- page.  This slows down page generation a little but improves heap consumption. -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>web.aggressiveHeapManagement</param-name>
		<param-value>false</param-value>
	</context-param>

	<!-- Run the webapp in debug mode -->
	<!-- SINCE 0.5.0 -->
	<!-- RESTART REQUIRED -->
	<context-param>
		<param-name>web.debugMode</param-name>
		<param-value>false</param-value>
	</context-param>

	<!-- Enable/disable global regex substitutions (i.e. shared across repositories) -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>regex.global</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Example global regex substitutions -->
	<!-- Use !!! to separate the search pattern and the replace pattern -->
	<!-- searchpattern!!!replacepattern -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>regex.global.bug</param-name>
		<param-value>\\b(Bug:)(\\s*[#]?|-){0,1}(\\d+)\\b!!!&lt;a href=&quot;http://somehost/bug/$3&quot;&gt;Bug-Id: $3&lt;/a&gt;</param-value>
	</context-param>

	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>regex.global.changeid</param-name>
		<param-value>\\b(Change-Id:\\s*)([A-Za-z0-9]*)\\b!!!&lt;a href=&quot;http://somehost/changeid/$2&quot;&gt;Change-Id: $2&lt;/a&gt;</param-value>
	</context-param>

	<!-- Example per-repository regex substitutions overrides global -->
	<!-- SINCE 0.5.0 -->
	<context-param>
		<param-name>regex.myrepository.bug</param-name>
		<param-value>\\b(Bug:)(\\s*[#]?|-){0,1}(\\d+)\\b!!!&lt;a href=&quot;http://elsewhere/bug/$3&quot;&gt;Bug-Id: $3&lt;/a&gt;</param-value>
	</context-param>

	<!-- ip or hostname of smtp server -->
	<!-- SINCE 0.6.0 -->
	<context-param>
		<param-name>mail.server</param-name>
		<param-value></param-value>
	</context-param>

	<!-- port to use for smtp requests -->
	<!-- SINCE 0.6.0 -->
	<context-param>
		<param-name>mail.port</param-name>
		<param-value>25</param-value>
	</context-param>

	<!-- debug the mail executor -->
	<!-- SINCE 0.6.0 -->
	<context-param>
		<param-name>mail.debug</param-name>
		<param-value>false</param-value>
	</context-param>

	<!-- if your smtp server requires authentication, supply the credentials here -->
	<!-- SINCE 0.6.0 -->
	<context-param>
		<param-name>mail.username</param-name>
		<param-value></param-value>
	</context-param>

	<!-- SINCE 0.6.0 -->
	<context-param>
		<param-name>mail.password</param-name>
		<param-value></param-value>
	</context-param>

	<!-- from address for generated emails -->
	<!-- SINCE 0.6.0 -->
	<context-param>
		<param-name>mail.fromAddress</param-name>
		<param-value></param-value>
	</context-param>

	<!-- List of email addresses for the Gitblit administrators -->
	<!-- SPACE-DELIMITED -->
	<!-- SINCE 0.6.0 -->
	<context-param>
		<param-name>mail.adminAddresses</param-name>
		<param-value></param-value>
	</context-param>

	<!-- List of email addresses for sending push email notifications. -->
	<!-- This key currently requires use of the sendemail.groovy hook script. -->
	<!-- If you set sendemail.groovy in *groovy.postReceiveScripts* then email -->
	<!-- notifications for all repositories (regardless of access restrictions!) -->
	<!-- will be sent to these addresses. -->
	<!-- SPACE-DELIMITED -->
	<!-- SINCE 0.8.0 -->
	<context-param>
		<param-name>mail.mailingLists</param-name>
		<param-value></param-value>
	</context-param>

	<!-- Your federation name is used for federation status acknowledgments.  If it is -->
	<!-- unset, and you elect to send a status acknowledgment, your Gitblit instance -->
	<!-- will be identified by its hostname, if available, else your internal ip address. -->
	<!-- The source Gitblit instance will also append your external IP address to your -->
	<!-- identification to differentiate multiple pulling systems behind a single proxy. -->
	<!-- SINCE 0.6.0 -->
	<context-param>
		<param-name>federation.name</param-name>
		<param-value></param-value>
	</context-param>

	<!-- Specify the passphrase of this Gitblit instance. -->
	<!-- An unspecified (empty) passphrase disables processing federation requests. -->
	<!-- This value can be anything you want: an integer, a sentence, an haiku, etc. -->
	<!-- Keep the value simple, though, to avoid Java properties file encoding issues. -->
	<!-- Changing your passphrase will break any registrations you have established with other -->
	<!-- Gitblit instances. -->
	<!-- CASE-SENSITIVE -->
	<!-- SINCE 0.6.0 -->
	<!-- RESTART REQUIRED *(only to enable or disable federation)* -->
	<context-param>
		<param-name>federation.passphrase</param-name>
		<param-value></param-value>
	</context-param>

	<!-- Control whether or not this Gitblit instance can receive federation proposals -->
	<!-- from another Gitblit instance.  Registering a federated Gitblit is a manual -->
	<!-- process.  Proposals help to simplify that process by allowing a remote Gitblit -->
	<!-- instance to send your Gitblit instance the federation pull data. -->
	<!-- SINCE 0.6.0 -->
	<context-param>
		<param-name>federation.allowProposals</param-name>
		<param-value>false</param-value>
	</context-param>

	<!-- The destination folder for cached federation proposals. -->
	<!-- Use forward slashes even on Windows!! -->
	<!-- SINCE 0.6.0 -->
	<context-param>
		<param-name>federation.proposalsFolder</param-name>
		<param-value>proposals</param-value>
	</context-param>

	<!-- The default pull frequency if frequency is unspecified on a registration -->
	<!-- SINCE 0.6.0 -->
	<context-param>
		<param-name>federation.defaultFrequency</param-name>
		<param-value>60 mins</param-value>
	</context-param>

	<!-- Federation Sets are named groups of repositories.  The Federation Sets are -->
	<!-- available for selection in the repository settings page.  You can assign a -->
	<!-- repository to one or more sets and then distribute the token for the set. -->
	<!-- This allows you to grant federation pull access to a subset of your available -->
	<!-- repositories.  Tokens for federation sets only grant repository pull access. -->
	<!-- SPACE-DELIMITED -->
	<!-- CASE-SENSITIVE -->
	<!-- SINCE 0.6.0 -->
	<context-param>
		<param-name>federation.sets</param-name>
		<param-value></param-value>
	</context-param>
 
	 
	<!-- Gitblit Context Listener -->	 
	<listener>
 		<listener-class>com.gitblit.GitBlit</listener-class>
 	</listener> 	
	
	
	<!-- Git Servlet
		 <url-pattern> MUST match: 
			* GitFilter
			* com.gitblit.Constants.GIT_PATH
			* Wicket Filter ignorePaths parameter -->
	<servlet>
		<servlet-name>GitServlet</servlet-name>
		<servlet-class>com.gitblit.GitServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>GitServlet</servlet-name>		
		<url-pattern>/git/*</url-pattern>
	</servlet-mapping>
	
	
	<!-- Syndication Servlet
		 <url-pattern> MUST match: 
			* SyndicationFilter
			* com.gitblit.Constants.SYNDICATION_PATH
			* Wicket Filter ignorePaths parameter -->
	<servlet>
		<servlet-name>SyndicationServlet</servlet-name>
		<servlet-class>com.gitblit.SyndicationServlet</servlet-class>		
	</servlet>
	<servlet-mapping>
		<servlet-name>SyndicationServlet</servlet-name>
		<url-pattern>/feed/*</url-pattern>
	</servlet-mapping>
	
	
	<!-- Zip Servlet
		 <url-pattern> MUST match: 
			* ZipServlet
			* com.gitblit.Constants.ZIP_PATH
			* Wicket Filter ignorePaths parameter -->
	<servlet>
		<servlet-name>ZipServlet</servlet-name>
		<servlet-class>com.gitblit.DownloadZipServlet</servlet-class>		
	</servlet>
	<servlet-mapping>
		<servlet-name>ZipServlet</servlet-name>
		<url-pattern>/zip/*</url-pattern>
	</servlet-mapping>
	
	
	<!-- Federation Servlet
		 <url-pattern> MUST match: 
		 	* com.gitblit.Constants.FEDERATION_PATH		 
			* Wicket Filter ignorePaths parameter -->
	<servlet>
		<servlet-name>FederationServlet</servlet-name>
		<servlet-class>com.gitblit.FederationServlet</servlet-class>		
	</servlet>
	<servlet-mapping>
		<servlet-name>FederationServlet</servlet-name>
		<url-pattern>/federation/*</url-pattern>
	</servlet-mapping>	
	
	
	<!-- Rpc Servlet
		 <url-pattern> MUST match: 
		 	* com.gitblit.Constants.RPC_PATH		 
			* Wicket Filter ignorePaths parameter -->
	<servlet>
		<servlet-name>RpcServlet</servlet-name>
		<servlet-class>com.gitblit.RpcServlet</servlet-class>		
	</servlet>
	<servlet-mapping>
		<servlet-name>RpcServlet</servlet-name>
		<url-pattern>/rpc/*</url-pattern>
	</servlet-mapping>	


	<!-- Pages Servlet
		 <url-pattern> MUST match: 
			* PagesFilter
			* com.gitblit.Constants.PAGES_PATH
			* Wicket Filter ignorePaths parameter -->
	<servlet>
		<servlet-name>PagesServlet</servlet-name>
		<servlet-class>com.gitblit.PagesServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>PagesServlet</servlet-name>		
		<url-pattern>/pages/*</url-pattern>
	</servlet-mapping>	
	

	<!-- Git Access Restriction Filter
		 <url-pattern> MUST match: 
			* GitServlet
			* com.gitblit.Constants.GIT_PATH
			* Wicket Filter ignorePaths parameter -->
	<filter>
		<filter-name>GitFilter</filter-name>
		<filter-class>com.gitblit.GitFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>GitFilter</filter-name>
		<url-pattern>/git/*</url-pattern>
	</filter-mapping>
	
	
	<!-- Syndication Restriction Filter
		 <url-pattern> MUST match: 
			* SyndicationServlet
			* com.gitblit.Constants.SYNDICATION_PATH
			* Wicket Filter ignorePaths parameter -->
	<filter>
		<filter-name>SyndicationFilter</filter-name>
		<filter-class>com.gitblit.SyndicationFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>SyndicationFilter</filter-name>
		<url-pattern>/feed/*</url-pattern>
	</filter-mapping>
	
	
	<!-- Download Zip Restriction Filter
		 <url-pattern> MUST match: 
			* DownloadZipServlet
			* com.gitblit.Constants.ZIP_PATH
			* Wicket Filter ignorePaths parameter -->
	<filter>
		<filter-name>ZipFilter</filter-name>
		<filter-class>com.gitblit.DownloadZipFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ZipFilter</filter-name>
		<url-pattern>/zip/*</url-pattern>
	</filter-mapping>

		
	<!-- Rpc Restriction Filter
		 <url-pattern> MUST match: 
			* RpcServlet
			* com.gitblit.Constants.RPC_PATH
			* Wicket Filter ignorePaths parameter -->
	<filter>
		<filter-name>RpcFilter</filter-name>
		<filter-class>com.gitblit.RpcFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>RpcFilter</filter-name>
		<url-pattern>/rpc/*</url-pattern>
	</filter-mapping>


	<!-- Pges Restriction Filter
		 <url-pattern> MUST match: 
			* PagesServlet
			* com.gitblit.Constants.PAGES_PATH
			* Wicket Filter ignorePaths parameter -->
	<filter>
		<filter-name>PagesFilter</filter-name>
		<filter-class>com.gitblit.PagesFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>PagesFilter</filter-name>
		<url-pattern>/pages/*</url-pattern>
	</filter-mapping>


	<!-- Wicket Filter -->
    <filter>
        <filter-name>wicketFilter</filter-name>
        <filter-class>
            org.apache.wicket.protocol.http.WicketFilter
        </filter-class>
        <init-param>
            <param-name>applicationClassName</param-name>
            <param-value>com.gitblit.wicket.GitBlitWebApp</param-value>
        </init-param>
        <init-param>
            <param-name>ignorePaths</param-name>
            <!-- Paths should match 
             	* SyndicationFilter <url-pattern>
             	* SyndicationServlet <url-pattern>
             	* com.gitblit.Constants.SYNDICATION_PATH
             	* GitFilter <url-pattern>
             	* GitServlet <url-pattern>
             	* com.gitblit.Constants.GIT_PATH
             	* Zipfilter <url-pattern>
             	* ZipServlet <url-pattern>
             	* com.gitblit.Constants.ZIP_PATH
             	* FederationServlet <url-pattern>
             	* RpcFilter <url-pattern>
             	* RpcServlet <url-pattern>
             	* PagesFilter <url-pattern>
             	* PagesServlet <url-pattern>
             	* com.gitblit.Constants.PAGES_PATH -->
            <param-value>git/,feed/,zip/,federation/,rpc/,pages/</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>wicketFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>