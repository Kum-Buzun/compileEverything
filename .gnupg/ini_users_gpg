#!/bin/bash

g="${H}/.gnupg"


function add_key() {

  local name="${1}"
  local passphrase="${1}pp1"

  if [[ $(gpg2 -k | grep "${name}") == "" ]]; then
    # generate activity for entropy
    # similar to http://serverfault.com/a/471418/783
    # (also check out https://bugs.launchpad.net/ubuntu/+source/gnupg/+bug/706011)
    # or https://github.com/bartmeuris/apt-packageserver/blob/master/packageserver.sh
    gpg2 --batch --yes --no-tty --passphrase "${passphrase}" --gen-key "${g}/${name}.unattended" & 
    # http://stackoverflow.com/a/1911387/6309
    PID=$!
    a="go"
    while [[ "${a}" != "" ]]; do
      haveged -n 1g -f "${g}/tmp" | dd of=/dev/null
      a=$(ps -ef|grep "${PID}"|grep -v grep|grep gpg2)
    done
    rm -f "${g}/tmp"
  fi

  if [[ $(gpg2 -k | grep "${name}") == "" ]]; then
    echo "No key generated for ${name}"
    exit 1
  fi

  if [[ ! -e "${g}/${name}.privatekey.asc" ]]; then
    gpg --export-secret-keys --armor ${name} > "${g}/${name}.privatekey.asc"
  fi

  if [[ ! -e "${g}/${name}.publickey.asc" ]]; then
    gpg --export --armor ${name} > "${g}/${name}.publickey.asc"
  fi
}

function get_machine_from_url(){
  local url="${1}"
  local _machine="${2}"
  local machine="${url#https://}"
  machine="${machine#*@}"
  machine="${machine%%/*}"
  machine="${machine%%/*}"
  machine="${machine%%:*}"
  eval ${_machine}="'${machine}'"
}

f=$(gpg --batch -q -d "${g}/users.netrc.asc" 2>/dev/null)

NEWLINE=$'\n'

function update_f() {
  local af="${1}"
  local name="${2}"
  local machine="${3}"
  local password="${4}"
  local _f="f"
  # http://stackoverflow.com/questions/3005963/how-can-i-have-a-newline-in-a-string-in-sh
  NEWLINE=$'\n'
  if [[ "${password}" == "" ]]; then password="${name}"; fi
  # http://stackoverflow.com/questions/229551/string-contains-in-bash
  if [[ "${af/machine ${machine} protocol https login ${name}/}" == "${af}" ]] ; then
    af="${af}machine ${machine} protocol https login ${name} password ${password}${NEWLINE}"
    echo -n "af='${af}'"
  fi
  eval ${_f}="'${af}'"
}

add_key  "projextrdr"

fenv="${H}/.envs.private"
source "${H}/sbin/usrcmd/get_tpl_value"

function add_user() {
  local user="${1}"
  local password="${2}"
  local f=$(gpg --batch -q -d "${g}/users.netrc.asc" 2>/dev/null)
  if [[ "${f}" != "" ]]; then f="${f}${NEWLINE}"; fi

  get_tpl_value "${fenv}" "@UPSTREAM_URL_HGIT@" upstream_url_hgit
  if [[ "${upstream_url_hgit}" != "" ]]; then
    get_machine_from_url "${upstream_url_hgit}" upstream
    echo "upstream='${upstream}', for user '${user}': ====="
    update_f "${f}" "${user}" "${upstream}" "${password}"
    echo "f='${f}'"
  fi

  get_tpl_value "${fenv}" "@DOWNSTREAM_URL_HGIT@" downstream_url_hgit
  if [[ "${downstream_url_hgit}" != "" ]]; then
    get_machine_from_url "${downstream_url_hgit}" downstream
    echo "downstream='${downstream}'"
    update_f "${f}" "${user}" "${downstream}" "${password}"
    echo "f='${f}'"
  fi

  gpg -ea -r projextrdr <<< "${f}" > "${g}/users.netrc.asc"
}

add_user "projextrdr"

get_tpl_value "${fenv}" "@USER_GA_PUSH@" user_ga_push
get_tpl_value "${fenv}" "@USER_GA_PUSH_PASSWORD@" user_ga_push_password
add_user "${user_ga_push}" "${user_ga_push_password}"

get_tpl_value "${fenv}" "@USER_PUSH@" user_push
get_tpl_value "${fenv}" "@USER_PUSH_PASSWORD@" user_push_password
add_user "${user_push}" "${user_push_password}"

get_tpl_value "${fenv}" "@USER_PULL@" user_pull
get_tpl_value "${fenv}" "@USER_PULL_PASSWORD@" user_pull_password
add_user "${user_pull}" "${user_pull_password}"
