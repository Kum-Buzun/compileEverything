page=get_page_glib
url=get_url_glib
ext=tar.xz
configcmd=@@LIBFFI_CFLAGS="-I${HULI}" LIBFFI_LIBS="-L${HULL} -L${HUL}/lib64 -lffi" ./configure --prefix=${HULS}/@@NAMEVER@@ --enable-shared --enable-static @@WITH_GNU_LD@@ --disable-modular-tests
#configcmd=./configure --prefix=${HULS}/@@NAMEVER@@ --enable-shared --enable-static @@WITH_GNU_LD@@ -with-libiconv=gnu
premake=gen_sed -i "s;^ICONV_LIBS =.*$;ICONV_LIBS = -liconv;g" Makefile ; gen_sed -i "s;^/\* #undef USE_LIBICONV_NATIVE \*/;#define USE_LIBICONV_GNU 1;g" config.h ; gen_sed -i "s;_14) tests;_14);g" gio/Makefile.in ; gen_sed -i "s;gdbus-2.0/codegen ;;g" gio/Makefile.in ; gen_sed -i "s;_14) tests;_14);g" gio/Makefile ; gen_sed -i "s;gdbus-2.0/codegen ;;g" gio/Makefile ; gen_sed -i "s;^bin_SCRIPTS += gdbus-codegen;bin_SCRIPTS = ;g" gio/gdbus-2.0/codegen/Makefile.am ; gen_sed -i "s;^bin_SCRIPTS = .*$;bin_SCRIPTS = ;g" gio/gdbus-2.0/codegen/Makefile.in; cp glib/glibconfig.h glib/glibconfig.h.ori ; gen_sed -i "s;^#define G_ATOMIC_LOCK_FREE;//#d_efine G_ATOMIC_LOCK_FREE;g" glib/glibconfig.h; diff glib/glibconfig.h glib/glibconfig.h.ori ; cp glib/gatomic.c glib/gatomic.c.ori ; gen_sed -i "s;(g_atomic_int_get) (volatile gint \*atomic);(g_atomic_int_get) (const volatile gint \*atomic);g" glib/gatomic.c ; gen_sed -i "s;(g_atomic_pointer_get) (volatile void \*atomic);(g_atomic_pointer_get) (const volatile void \*atomic);g" glib/gatomic.c ; diff glib/gatomic.c glib/gatomic.c.ori ; diff glib/gatomic.c glib/gatomic.c ; touch glib/glibconfig-stamp
