#!/bin/bash
fullFilePathOri="$(readlink -f $1)"
fullPathDst="$2"
if [[ ! -d "${fullPathDst}" ]] ; then
  if [[ "${fullPathDst}" == "" ]] ; then
    fullPathDst="."
  else
    echo "cp_tpl: there is no directory at '${fullPathDst}'" ; exit 1
  fi
fi
fileOri="${fullFilePathOri##*/}"
fullPathOri="${fullFilePathOri%/*}"
if [[ "${fullPathOri}" == "${fullFilePathOri}" ]] ; then fullPathOri="." ; fi 
echo "-------"
#echo "fullFilePathOri='${fullFilePathOri}',"
#echo "fullPathDst='${fullPathDst}'"
#echo "fullPathOri='${fullPathOri}',"
#echo "fileOri='${fileOri}'"

function get_param_file() {
  local _filename=$2
  local filename="$1"
  local afilename="${H}/${filename}"
  if [[ ! -e "${afilename}" ]] ; then 
    afilename="${H}/../${filename}"
  fi
  eval $_filename="'${afilename}'"
}

fileDst="${fileOri%.tpl}"
if [[  "${fileDst}" == "${fileOri}" ]] ; then 
  if [[ -f "${fullFilePathOri}.tpl" ]] ; then
    fileDst="${fileOri}"
    fileOri="${fileOri}.tpl"
    fullFilePathOri="${fullFilePathOri}.tpl"
  else
    echo "cp_tpl: name '${fileOri}' MUST end with '.tpl' or '${fileOri}.tpl' MUST exist." ; exit 1 
  fi
fi
#echo "fileDst='${fileDst}', fileOri='${fileOri}'"

fullFilePathDst="${fullPathDst}/${fileDst}"
fullFilePathDst="${fullFilePathDst//\/\///}"
echo cp -f "${fullFilePathOri}" "${fullFilePathDst}"
cp -f "${fullFilePathOri}" "${fullFilePathDst}"

cptpl_uname=$(uname)
hostnames="hostname -s"
if [[ "${cptpl_uname#CYGWIN}" != "${cptpl_uname}" ]] ; then
  echo "CYGWIN"
  hostnames="hostname"
  # echo $(${hostnames})
fi

"${H}/sbin/gen_sed" -i "s;@H@;${H};g" "${fullFilePathDst}"
"${H}/sbin/gen_sed" -i "s/@HOSTNAME@/$(${hostnames})/g" "${fullFilePathDst}"
"${H}/sbin/gen_sed" -i "s/@USERNAME@/$(/usr/bin/id -un)/g" "${fullFilePathDst}"
"${H}/sbin/gen_sed" -i "s/@GROUPNAME@/$(/usr/bin/id -un)/g" "${fullFilePathDst}"
"${H}/sbin/gen_sed" -i "s;@@TITLE@@;${H};g" "${fullFilePathDst}"

#fqn=$(nslookup $(hostname -i)) ; fqn=${fqn##*name = } ; fqn=${fqn%.*}
if [[ "${cptpl_uname#CYGWIN}" != "${cptpl_uname}" ]] ; then
  fqn=$(${hostnames})
else
  fqn=$(/usr/bin/host -TtA $(hostname -s)|grep "has address"|/usr/bin/awk '{print $1}') ; if [[ "${fqn}" == "" ]] ; then fqn=$(hostname -s) ; fi
fi
"${H}/sbin/gen_sed" -i "s/@FQN@/${fqn}/g" "${fullFilePathDst}"
fqnemail=${fqn/./@}
"${H}/sbin/gen_sed" -i "s/@EMAIL@/${fqnemail}/g" "${fullFilePathDst}"

get_param_file ".ports.ini" portini
while read line; do 
  port=(${line#*=})
  name=(${line%=*})
  # echo "${name} - ${port}"
  "${H}/sbin/gen_sed" -i "s;${name};${port};g" "${fullFilePathDst}"
done < "${portini}"

epoch=$(date +%s)
epoch=$((epoch+1000))
"${H}/sbin/gen_sed" -i "s/@EPOCH@/${epoch}/g" "${fullFilePathDst}"

ldapg=$(grep "@LDAP_" "${fullFilePathDst}")
# echo "ldapg ${ldapg}"
if [[ "${ldapg}" != "" ]] ; then
  get_param_file ".ldap.private" ldap
  if [[ ! -e "${ldap}" ]] ; then get_param_file ".ldap.test" ldap ; fi
  if [[ -e "${ldap}" ]] ; then
    while read line; do
      ldapp=("${line#*=}")
      ldapn=(${line%%=*})
      # echo "ldap: ${ldapn} - ${ldapp}"
      "${H}/sbin/gen_sed" -i "s;${ldapn};${ldapp};g" "${fullFilePathDst}"
    done < "${ldap}"
  else
    "${H}/sbin/gen_sed" -i -n -e '/LDAP_START/{p; :a; N; /LDAP_END/!ba; s/.*\n//}; p' "${fullFilePathDst}"
    # "${H}/sbin/gen_sed" -i -n -e '/LDAP_START/{' -e 'p' -e ':a' -e 'N' -e '/LDAP_END/!ba' -e 's/.*\n//' -e '}' -e 'p' "${fullFilePathDst}"
    "${H}/sbin/gen_sed" -i "s; companyldap;;g" "${fullFilePathDst}"
  fi
  "${H}/sbin/gen_sed" -i "s;# LDAP_START;;g" "${fullFilePathDst}"
  "${H}/sbin/gen_sed" -i "s;# LDAP_END;;g" "${fullFilePathDst}"
fi

"${H}/sbin/gen_sed" -i "s;#@#;@;g" "${fullFilePathDst}"

while [[ $(grep -m 1 "@MYSQL_" "${fullFilePathDst}") != "" ]] ; do
mysql==$(grep -m 1 "@MYSQL_" "${fullFilePathDst}")
# echo "D: mysql='${mysql}'"
if [[ "${mysql}" != "" ]] ; then
  replace=false
  mysql="@MYSQL_${mysql#*@MYSQL_}"
  mysql="${mysql%@*}@"
  mysql_base="${mysql#*_}"
  mysql_base="${mysql_base%%_*}"
  # echo "D: mysql_base='${mysql_base}'"
  if [[ -e "${H}/mysql/sandboxes/${mysql_base}" ]] ; then
    mysql_param="${mysql##*_}"
    mysql_param="${mysql_param%@*}"
    # echo "D: mysql_param='${mysql_param}'"
    if [[ "${mysql_param}" != "" ]] ; then
      mysql_grep=$(grep "${mysql_param}" "${H}/mysql/sandboxes/${mysql_base}/my.sandbox.cnf")
      if [[ "${mysql_grep}" != "" ]] ; then
        # echo "D: mysql_grep='${mysql_grep}'"
        mysql_val=${mysql_grep##*= }
        # echo "D: "${H}/sbin/gen_sed" -i \"s;${mysql};${mysql_val};g\" \"${fullFilePathDst}\""
        "${H}/sbin/gen_sed" -i "s;${mysql};${mysql_val};g" "${fullFilePathDst}"
        replace=true
      fi
    fi
  fi
  if [[ "${replace}" == "false" ]] ; then exit 1 ; fi
fi

done
